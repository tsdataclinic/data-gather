"""Column rename: settings to config, in data_store_setting table.
Also add add a `type` key to the `config` JSON with the same value from the `type`
column.

Revision ID: 7e5007a193d5
Revises: 1c8636c173fb
Create Date: 2023-11-13 09:23:24.432171

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "7e5007a193d5"
down_revision = "1c8636c173fb"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "data_store_setting", sa.Column("config", sqlite.JSON(), nullable=True)
    )
    # Copy data from 'settings' to 'config' and add 'type' key to JSON
    op.execute(
        """
        UPDATE data_store_setting
        SET config = json_patch(settings, json_object('type', type))
        WHERE settings IS NOT NULL
    """
    )
    op.drop_column("data_store_setting", "settings")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "data_store_setting", sa.Column("settings", sqlite.JSON(), nullable=True)
    )
    # Copy data from 'config' back to 'settings' and remove 'type' key from JSON
    op.execute(
        """
        UPDATE data_store_setting
        SET settings = json_remove(config, '$.type')
        WHERE config IS NOT NULL
    """
    )
    op.drop_column("data_store_setting", "config")
    # ### end Alembic commands ###
